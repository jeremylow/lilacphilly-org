# Generated by Django 2.2.8 on 2019-12-09 21:51

import common.blocks
from django.db import migrations, models
import django.db.models.deletion
import modelcluster.contrib.taggit
import modelcluster.fields
import wagtail.contrib.routable_page.models
import wagtail.core.blocks
import wagtail.core.fields
import wagtail.images.blocks


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailcore', '0041_group_collection_permissions_verbose_name_plural'),
        ('wagtailimages', '0001_squashed_0021'),
        ('taggit', '0003_taggeditem_add_unique_index'),
    ]

    operations = [
        migrations.CreateModel(
            name='BlogEntry',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('og_type', models.CharField(choices=[('article', 'Article'), ('website', 'Website'), ('book', 'Book'), ('video', 'Video'), ('profile', 'Profile')], default='website', help_text='See Object Types: https://developers.facebook.com/docs/reference/opengraph/', max_length=127, verbose_name='OG Page Type')),
                ('blog_date', models.DateField(verbose_name='Blog Entry Date')),
                ('blog_author', models.CharField(max_length=255)),
                ('body', wagtail.core.fields.StreamField([('banner_image', wagtail.core.blocks.StructBlock([('photo', wagtail.images.blocks.ImageChooserBlock(required=True)), ('internal_link', wagtail.core.blocks.PageChooserBlock(required=False)), ('external_link', wagtail.core.blocks.URLBlock(required=False)), ('alt_text', wagtail.core.blocks.CharBlock(max_length=255, required=False))])), ('heading', wagtail.core.blocks.CharBlock(classname='full title')), ('paragraph', wagtail.core.blocks.RichTextBlock()), ('image', wagtail.core.blocks.StructBlock([('photo', wagtail.images.blocks.ImageChooserBlock()), ('photo_alignment', wagtail.core.blocks.ChoiceBlock(choices=[('left', 'Left'), ('right', 'Right'), ('center', 'Center')])), ('caption', wagtail.core.blocks.CharBlock(max_length=255)), ('caption_alignment', wagtail.core.blocks.ChoiceBlock(choices=[('tl', 'Left'), ('tr', 'Right'), ('tc', 'Center')]))])), ('h1', common.blocks.HeaderH1(classname='full title')), ('subhead', common.blocks.Subhead(classname='full title')), ('block_quote', wagtail.core.blocks.StructBlock([('quote', wagtail.core.blocks.TextBlock(classname='full', max_length=255, required=True))])), ('call_to_action', wagtail.core.blocks.StructBlock([('title', wagtail.core.blocks.CharBlock(max_length=255)), ('cta_copy', wagtail.core.blocks.CharBlock(max_length=255)), ('button_title', wagtail.core.blocks.CharBlock(max_length=255)), ('button_link', wagtail.core.blocks.PageChooserBlock(required=False)), ('button_external_link', wagtail.core.blocks.URLBlock(required=False))])), ('small_call_to_action', wagtail.core.blocks.StructBlock([('button_copy', wagtail.core.blocks.CharBlock(max_length=32)), ('button_link', wagtail.core.blocks.PageChooserBlock(required=False)), ('button_external_link', wagtail.core.blocks.URLBlock(required=False)), ('alignment', wagtail.core.blocks.ChoiceBlock(choices=[('tl', 'Left'), ('tr', 'Right'), ('tc', 'Center')]))]))])),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='BlogHomePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
            ],
            options={
                'abstract': False,
            },
            bases=(wagtail.contrib.routable_page.models.RoutablePageMixin, 'wagtailcore.page'),
        ),
        migrations.CreateModel(
            name='BlogTagIndexPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='BlogEntryTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='tagged_items', to='blog.BlogEntry')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blog_blogentrytag_items', to='taggit.Tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='blogentry',
            name='blog_tags',
            field=modelcluster.contrib.taggit.ClusterTaggableManager(blank=True, help_text='A comma-separated list of tags.', through='blog.BlogEntryTag', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='blogentry',
            name='share_image',
            field=models.ForeignKey(blank=True, help_text='Should be larger than 1200 x 630px\n See https://developers.facebook.com/docs/sharing/best-practices#images', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image', verbose_name='Share Image'),
        ),
    ]
