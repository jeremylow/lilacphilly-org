# Generated by Django 2.2.8 on 2019-12-09 21:52

import common.blocks
from django.db import migrations, models
import django.db.models.deletion
import wagtail.core.blocks
import wagtail.core.fields
import wagtail.images.blocks


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailcore', '0041_group_collection_permissions_verbose_name_plural'),
        ('wagtailimages', '0001_squashed_0021'),
    ]

    operations = [
        migrations.CreateModel(
            name='EmbedCodeSnippet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=255)),
                ('url', models.URLField(blank=True, null=True)),
                ('embed_code', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='TopLevelPages',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='TopLevelPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('body', wagtail.core.fields.StreamField([('banner_image', wagtail.core.blocks.StructBlock([('photo', wagtail.images.blocks.ImageChooserBlock(required=True)), ('internal_link', wagtail.core.blocks.PageChooserBlock(required=False)), ('external_link', wagtail.core.blocks.URLBlock(required=False)), ('alt_text', wagtail.core.blocks.CharBlock(max_length=255, required=False))])), ('heading', wagtail.core.blocks.CharBlock(classname='full title')), ('paragraph', wagtail.core.blocks.RichTextBlock()), ('image', wagtail.core.blocks.StructBlock([('photo', wagtail.images.blocks.ImageChooserBlock()), ('photo_alignment', wagtail.core.blocks.ChoiceBlock(choices=[('left', 'Left'), ('right', 'Right'), ('center', 'Center')])), ('caption', wagtail.core.blocks.CharBlock(max_length=255)), ('caption_alignment', wagtail.core.blocks.ChoiceBlock(choices=[('tl', 'Left'), ('tr', 'Right'), ('tc', 'Center')]))])), ('h1', common.blocks.HeaderH1(classname='full title')), ('subhead', common.blocks.Subhead(classname='full title')), ('block_quote', wagtail.core.blocks.StructBlock([('quote', wagtail.core.blocks.TextBlock(classname='full', max_length=255, required=True))])), ('call_to_action', wagtail.core.blocks.StructBlock([('title', wagtail.core.blocks.CharBlock(max_length=255)), ('cta_copy', wagtail.core.blocks.CharBlock(max_length=255)), ('button_title', wagtail.core.blocks.CharBlock(max_length=255)), ('button_link', wagtail.core.blocks.PageChooserBlock(required=False)), ('button_external_link', wagtail.core.blocks.URLBlock(required=False))])), ('small_call_to_action', wagtail.core.blocks.StructBlock([('button_copy', wagtail.core.blocks.CharBlock(max_length=32)), ('button_link', wagtail.core.blocks.PageChooserBlock(required=False)), ('button_external_link', wagtail.core.blocks.URLBlock(required=False)), ('alignment', wagtail.core.blocks.ChoiceBlock(choices=[('tl', 'Left'), ('tr', 'Right'), ('tc', 'Center')]))])), ('embed_code', wagtail.core.blocks.StructBlock([('embed_code', wagtail.core.blocks.TextBlock(required=True))]))])),
                ('page_date', models.DateField()),
                ('fundraising_snippet', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='common.EmbedCodeSnippet')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='SocialMediaSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('facebook', models.URLField(blank=True, help_text='Your Facebook page URL')),
                ('twitter', models.URLField(blank=True, help_text='Your twitter profile URL')),
                ('twitter_screen_name', models.CharField(blank=True, help_text='Your twitter screenname (with the "@"', max_length=16)),
                ('instagram', models.URLField(blank=True, help_text='Your Instagram profile URL')),
                ('youtube', models.URLField(blank=True, help_text='Your YouTube channel or user account URL')),
                ('site', models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, to='wagtailcore.Site')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SEOSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organization_short_name', models.CharField(help_text='The actual name of your local (ie. Philly DSA', max_length=255)),
                ('organization_full_name', models.CharField(help_text='The actual name of your local (ie. Philadelphia Local of the Democratic [etc])', max_length=500)),
                ('address_street', models.CharField(blank=True, help_text='Street address for local (if any)', max_length=255)),
                ('address_city', models.CharField(blank=True, max_length=255)),
                ('address_state', models.CharField(blank=True, max_length=255)),
                ('address_zip_code', models.CharField(blank=True, max_length=5)),
                ('description', models.CharField(blank=True, help_text='A short description of your local. City, what you are trying to achieve, etc.', max_length=500)),
                ('keywords', models.CharField(blank=True, help_text='Comma separated list of keywords describing your website.', max_length=1500)),
                ('google_site_verification_key', models.CharField(blank=True, help_text='Verification key for Google Webmaster Tools.', max_length=255)),
                ('google_analytics_key', models.CharField(blank=True, help_text='Google Analytics Key. Should be something like UA-101255774-1.', max_length=255)),
                ('logo', models.ForeignKey(blank=True, help_text='The URL of the logo of your local. Ideally, should be 1200x1200', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
                ('logo_wide', models.ForeignKey(blank=True, help_text='Wide-format logo URL. Should be less than 60px high and 600px wide.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
                ('site', models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, to='wagtailcore.Site')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
